# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build CI

on:
 workflow_dispatch:
 push:
    tags:
      - "v*.*.*"


jobs:
  build_on_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.10.0'
        cache: 'npm'
    - name: Build Project
      run: |
        npm ci
        npm run make
    - name: Zip Binaries
      run: |
        mkdir windows_build
        cp -r out/make/zip/win32/x64/*.zip windows_build/windows.zip
    - name: Upload Binaries
      uses: actions/upload-artifact@v4.4.3
      with:
        name: windows
        path: windows_build

  build_on_mac_aarm:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.10.0'
        cache: 'npm'
    - name: Build Project
      run: |
        npm ci
        npm run make
    - name: Zip Binaries
      run: |
        mkdir mac_build
        cp -r out/make/zip/darwin/aarm64/*.zip mac_build/mac_aarm.zip
    - name: Upload Binaries
      uses: actions/upload-artifact@v4.4.3
      with:
        name: mac
        path: mac_build

  build_on_mac_x86:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.10.0'
        cache: 'npm'
    - name: Build Project
      run: |
        npm ci
        npm run make
    - name: Zip Binaries
      run: |
        mkdir mac_build
        cp -r out/make/zip/darwin/x64/*.zip mac_build/mac_x64.zip
    - name: Upload Binaries
      uses: actions/upload-artifact@v4.4.3
      with:
        name: mac_x64
        path: mac_build
   
  releases:
    needs: [build_on_windows, build_on_mac_aarm, build_on_mac_x86]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: ./artifacts
      - name: Upload to Releases
        uses: softprops/action-gh-release@v2.1.0
        with:
         draft: true
         token: ${{ secrets.RELEASE_TOKEN_TEST }}
         files: |
            ./artifacts/windows/windows.zip
            ./artifacts/mac/mac_aarm.zip
            ./artifacts/mac_x64/mac_x64.zip
        